"use client";

import { getSession, signOut } from "next-auth/react";
import { useState, useEffect } from "react";
import LoadingOverlay from "../components/LoadingOverlay";

export default function PatientDashboard() {
  const [patientData, setPatientData] = useState(null);
  const [error, setError] = useState("");

  useEffect(() => {
    async function fetchData() {
      const session = await getSession();
      if (!session) {
        setError("Please login first.");
        return;
      }

      const critizen_id = session.user.name;

      try {
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å 3 API ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
        const [res1, res2, res3] = await Promise.all([
          fetch("/api/search_user", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ critizen_id }),
          }),
          fetch("/api/machine_api/fetch_user", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ critizen_id }),
          }),
          fetch("/api/find_medication", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ critizen_id }),
          }),
        ]);

        const data1 = await res1.json();
        const data2 = await res2.json();
        const data3 = await res3.json();

        if (res1.ok && data1.found && res2.ok && data2.found && res3.ok) {
          const medications = data3.medications || [];

          // map history ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏¢‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏≤
          const history_Compartment = (data1.patient.history || []).map((entry) => {
            const medicalWithCompartment = {};
            for (const [medName, amount] of Object.entries(entry.medical)) {
              // ‡∏´‡∏≤ compartment ‡∏Ç‡∏≠‡∏á‡∏¢‡∏≤‡πÉ‡∏ô medications
              const medObj = medications.find((med) => med.name === medName);
              // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡∏ä‡πà‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡πÅ‡∏õ‡∏•‡∏á servo_1 ‡πÄ‡∏õ‡πá‡∏ô ‡∏ä‡πà‡∏≠‡∏á 1 (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡πÉ‡∏ä‡πâ ‡∏ä‡πà‡∏≠‡∏á ?)
              const compartment = medObj?.compartment
                ? `‡∏ä‡πà‡∏≠‡∏á ${medObj.compartment.replace("servo_", "")}`
                : "‡∏ä‡πà‡∏≠‡∏á ?";
              // ‡∏ó‡∏≥‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô "Paracetamol 2 ‡πÄ‡∏°‡πá‡∏î (‡∏ä‡πà‡∏≠‡∏á 1)"
              medicalWithCompartment[`${medName} ${amount} ‡πÄ‡∏°‡πá‡∏î (${compartment})`] = amount;
            }
            return { ...entry, medical: medicalWithCompartment };
          });

          setPatientData({
            ...data1.patient,
            history: history_Compartment,
            extra: data2.User_find,
          });
        } else {
          setError("Some data not found");
        }
      } catch (err) {
        console.error(err);
        setError("Something went wrong");
      }
    }

    fetchData();
  }, []);

  if (error) {
    return <p className="text-red-500 text-center mt-10">{error}</p>;
  }

  if (!patientData) {
    return <LoadingOverlay />;
  }

  return (
    <div className="flex min-h-screen bg-gray-100">
      {/* Sidebar */}
      <aside className="w-64 bg-white shadow-lg p-6 flex flex-col">
        <h2 className="text-xl font-bold mb-8">Menu</h2>
        <nav className="flex flex-col space-y-4 text-gray-700">
          <a href="#" className="font-semibold text-indigo-600">
            üìã‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢
          </a>
          <a href="/client/machine">‚öôÔ∏è ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ï‡∏π‡πà‡∏à‡πà‡∏≤‡∏¢‡∏¢‡∏≤</a>
          <a href="/client/time_setting">‚è∞ ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤</a>
        </nav>
      </aside>

      {/* Main Content */}
      <div className="flex-1 flex flex-col">
        {/* TopBar */}
        <header className="flex justify-between items-center bg-white shadow px-8 py-4">
          <h1 className="text-2xl font-semibold">PharmaNetix</h1>
          <button
            onClick={() => signOut()}
            className="bg-gray-800 text-white px-4 py-2 rounded hover:bg-gray-700 cursor-pointer"
          >
            Sign Out
          </button>
        </header>

        {/* Body */}
        <main className="flex flex-1 p-8 gap-8">
          {/* Patient Info */}
          <div className="flex-1 space-y-8">
            {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß */}
            <section className="bg-white p-6 rounded-lg shadow">
              <h2 className="text-xl font-bold mb-4">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</h2>
              <div className="grid grid-cols-2 gap-4 text-gray-700">
                <div>
                  <strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> {patientData.name}
                </div>
                <div>
                  <strong>‡∏≠‡∏≤‡∏¢‡∏∏:</strong> {patientData.age} ‡∏õ‡∏µ
                </div>
                <div>
                  <strong>‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å:</strong> {patientData.weight} ‡∏Å‡∏Å.
                </div>
                <div>
                  <strong>‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á:</strong> {patientData.height} ‡∏ã‡∏°.
                </div>
                <div>
                  <strong>‡∏®‡∏≤‡∏™‡∏ô‡∏≤:</strong> {patientData.religion}
                </div>
                <div>
                  <strong>Device ID:</strong> {patientData.extra?.device_id || "N/A"}
                </div>
              </div>
            </section>

            {/* ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤ */}
            <section className="bg-white p-6 rounded-lg shadow">
              <h2 className="text-xl font-bold mb-4">‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡∏¢‡∏≤</h2>

              {patientData.history?.length ? (
                <div className="space-y-4">
                  {patientData.history
                    .slice() // clone array
                    .sort((a, b) => new Date(b.date) - new Date(a.date))
                    .map((entry, idx) => (
                      <div key={idx} className="border rounded p-4">
                        <div className="font-semibold mb-2">{entry.date}</div>
                        <ul className="list-disc pl-5 text-gray-700">
                          {Object.entries(entry.medical).map(([medName, amount], index) => (
                            <li key={index}>
                              {medName} {/* ‡πÄ‡∏ä‡πà‡∏ô Paracetamol 2 ‡πÄ‡∏°‡πá‡∏î (‡∏ä‡πà‡∏≠‡∏á 1) */}
                            </li>
                          ))}
                        </ul>
                      </div>
                    ))}
                </div>
              ) : (
                <p className="text-gray-500">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡∏¢‡∏≤</p>
              )}
            </section>
          </div>

          {/* Profile Card */}
          <div className="w-80">
            <div className="bg-white p-6 rounded-lg shadow text-center space-y-4">
              <div className="text-6xl">
                {patientData.gender === "‡∏ä‡∏≤‡∏¢"
                  ? "üë®‚Äç‚öïÔ∏è"
                  : patientData.gender === "‡∏´‡∏ç‡∏¥‡∏á"
                  ? "üë©‚Äç‚öïÔ∏è"
                  : "üë§"}
              </div>

              <div className="text-xl font-semibold">{patientData.name}</div>
              <div className="text-gray-500">{patientData.nation}</div>
              <div className="grid grid-cols-2 gap-4 text-sm mt-4 text-gray-700">
                <div>
                  <strong>‡∏≠‡∏≤‡∏¢‡∏∏</strong>
                  <br />
                  {patientData.age}
                </div>
                <div>
                  <strong>‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å</strong>
                  <br />
                  {patientData.weight} ‡∏Å‡∏Å.
                </div>
                <div>
                  <strong>‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á</strong>
                  <br />
                  {patientData.height} ‡∏ã‡∏°.
                </div>
                <div>
                  <strong>‡∏®‡∏≤‡∏™‡∏ô‡∏≤</strong>
                  <br />
                  {patientData.religion}
                </div>
                <div className="col-span-2 mt-2">
                  <strong>Device ID</strong>
                  <br />
                  {patientData.extra?.device_id || "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"}
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>
  );
}
